version: 2.1

orbs:
  win: circleci/windows@2.4.0

executors:
  golang:
    docker:
      - image: cimg/go:1.17

commands:
  verify_dist_files_exist:
    parameters:
      files:
        type: string
        default: |
            bin/otelcol_darwin_amd64
            bin/otelcol_linux_arm64
            bin/otelcol_linux_amd64
            bin/otelcol_windows_amd64.exe
    steps:
      - run:
          name: Check if files exist
          command: |
            files="<< parameters.files >>"
            for f in $files; do
              if [[ ! -f $f ]]
              then
                  echo "$f does not exist."
                  exit 1 
              fi
            done

  attach_to_workspace:
    steps:
      - attach_workspace:
          at: ~/

  save_module_cache:
    steps:
      - save_cache:
          key: cimg-go-pkg-mod-{{ arch }}-{{ checksum "go.sum" }}
          paths:
            - ~/go/pkg/mod

  restore_module_cache:
    steps:
      - run:
          name: create modules dir
          command: mkdir -p ~/go/pkg/mod
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - cimg-go-pkg-mod-{{ arch }}-{{ checksum "go.sum" }}

workflows:
  version: 2
  build-and-test:
    jobs:
      - setup-environment:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
      - cross-compile:
          requires:
            - setup-environment
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
      - coverage:
          requires:
            - setup-environment
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
      - publish-check:
          name: publish-check-main
          requires:
            - cross-compile
            - coverage
          filters:
            branches:
              only: main
      - publish-check:
          name: publish-check-pr
          requires:
            - cross-compile
            - coverage
          filters:
            branches:
              ignore: main
jobs:
  setup-environment:
    executor: golang
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/
          paths: project
      - restore_module_cache
      - persist_to_workspace:
          root: ~/
          paths: go/pkg/mod
      - run:
          name: Install tools
          command: make install-tools
      - persist_to_workspace:
          root: ~/
          paths: go/bin

  cross-compile:
    executor: golang
    parallelism: 4
    steps:
      - attach_to_workspace
      - run:
          name: Build collector for all archs
          command: grep ^binaries-all-sys Makefile|fmt -w 1|tail -n +2|circleci tests split|xargs make
      - run:
          name: Log checksums to console
          command: shasum -a 256 bin/*
      - persist_to_workspace:
          root: ~/
          paths: project/bin

  coverage:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Install packages.
          command: sudo apt update && sudo apt-get install bzr time
      - run:
          name: Coverage tests
          command: make gotest-with-cover
# DISABLE CODECOV UNTIL THE SCRIPT IS AUDITED AND WE ARE CERTAIN IT IS OK TO TO EXECUTE IT.
#      - run:
#          name: Code coverage
#          command: bash <(curl -s https://codecov.io/bash)

  publish-check:
    docker:
      - image: cimg/go:1.17
    steps:
      - attach_to_workspace
      - setup_remote_docker
      - verify_dist_files_exist
      - run:
          name: Check passed
          command: echo "publish check passed meaning release CI jobs should work as expected"
          when: on_success
      - run:
          name: Check failed
          command: echo "publish check failed. This means release CI jobs will likely fail as well"
          when: on_fail
