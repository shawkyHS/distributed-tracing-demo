name: build-and-test
on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
env:
  TEST_RESULTS: testbed/tests/results/junit/results.xml

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install dependencies
        if: steps.module-cache.outputs.cache-hit != 'true'
        run: |
          make gomoddownload
          make gotestinstall
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-tool-binaries
        with:
          path: /home/runner/go/bin
          key: tools-${{ runner.os }}-${{ hashFiles('./internal/tools/go.mod', './cmd/mdatagen/go.mod', './cmd/mdatagen/*.go') }}
      - name: Install Tools
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make install-tools
  lint:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-tool-binaries
        with:
          path: /home/runner/go/bin
          key: tools-${{ runner.os }}-${{ hashFiles('./internal/tools/go.mod', './cmd/mdatagen/go.mod', './cmd/mdatagen/*.go') }}
      - name: Lint
        run: make -j5 checklicense misspell checkdoc goimpi golint
      - name: Gen Metadata
        run: |
          make genmdata
          git diff --exit-code || (echo 'Generated code is out of date, please run "make genmdata" and commit the changes in this PR.' && exit 1)
      - name: Gen Pdata
        run: |
          make genpdata
          git diff --exit-code || (echo 'Generated code is out of date, please run "make genpdata" and commit the changes in this PR.' && exit 1)
  unittest:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-tool-binaries
        with:
          path: /home/runner/go/bin
          key: tools-${{ runner.os }}-${{ hashFiles('./internal/tools/go.mod', './cmd/mdatagen/go.mod', './cmd/mdatagen/*.go') }}
      - name: Run Unit Tests
        run: |
          mkdir -p test-results/junit
          trap "go-junit-report -set-exit-code < test-results/junit/unittests.out > test-results/junit/unittests.xml" EXIT
          # some hostmetrics scraping tests require access to /proc.
          sudo make gotest | tee test-results/junit/unittests.out
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: unittests-results
          path: test-results/junit/unittests.xml
  cross-compile:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Build Collector for All Architectures
        run: make binaries-all-sys
      - name: Create Collector Binaries Archive
        run: tar -cvf bin.tar ./bin
      - name: Upload Collector Binaries
        uses: actions/upload-artifact@v2.2.4
        with:
          name: collector-binaries
          path: ./bin.tar
